name: Upload Apk to Firebase Distribution

on:
  push:
    tags:
      - '*-release-alpha'

jobs:
  #  build:
  #
  #    runs-on: ubuntu-latest
  #
  #    steps:
  #
  #    - uses: actions/checkout@v4
  #
  #    - name: set up JDK 17
  #      uses: actions/setup-java@v4
  #      with:
  #        java-version: '17'
  #        distribution: 'zulu'
  #        cache: gradle
  #
  #    - name: Grant execute permission for gradlew
  #      run: chmod +x gradlew
  #    - name: Build with Gradle
  #      run: ./gradlew assembleProductionRelease
  #
  #    - name: Upload to Firebase App Distribution
  #      uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
  #      with:
  #        appId: ${{ secrets.FIREBASE_APP_ID }}
  #        serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
  #        file: app/build/outputs/apk/production/release/app-production-release.apk
  #        groups: android
  #        releaseNotesFile: release_note.md

  build:

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v4

      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: gradle

      - name: Prepare Keystore
        run: |
          echo "${{ secrets.ENCRYPTED_KEY_STORE }}" > keystore.asc
          gpg -d --passphrase "${{ secrets.KEY_STORE_PASSPHRASE }}" --batch keystore.asc > keystore.jks

      - name: Prepare Keystore variables
        run: |
          echo "STORE_FILE_NAME=keystore.jks" &>> signing.properties
          echo "STORE_PASSWORD=${{ secrets.KEY_PASSWORD }}" &>> signing.properties
          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" &>> signing.properties
          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" &>> signing.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew assembleDevRelease

      - name: Get version
        id: version
        run: |
          export versionName="$(./gradlew -q app:printVersionName)"
          echo "version=$versionName" >> $GITHUB_OUTPUT

      - name: Upload to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
        with:
          appId: ${{ secrets.FIREBASE_APP_ID_DEV }}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT_DEV }}
          file: app/build/outputs/apk/dev/release/app-dev-release.apk
          groups: android
          releaseNotesFile: release_note.md

  notify:

    needs: [ build ]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Get release notes
        id: release_note
        run: |
          export content="$(cat release_note.md)"
          content=${content//'"'/'\"'/}
          content=${content//$'\n'/'\n'}
          echo "release_note=$content" >> $GITHUB_OUTPUT

      - name: Post build status to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: 'C049MCCJ38B'
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<!channel> Upload app to FirebaseDistribution: ${{ job.status }}\n"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Feature*\n${{ steps.release_note.outputs.release_note }}"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Tag*\n${{ github.ref_name }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Version*\n${{ needs.build.steps.version.outputs.version }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
